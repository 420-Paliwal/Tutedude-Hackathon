🎯 PROJECT TITLE: BazaarBuddy – A Fullstack Web App for Street Food Vendors to Source Raw Materials from Verified Suppliers

🧠 GOAL:
Build a full working MERN (MongoDB, Express, React, Node.js) stack web application with two user roles:
1. Street Vendor (to browse, order raw materials)
2. Supplier (to list products and manage orders)

---

🛠️ FEATURES TO BUILD:

### 🔐 Authentication (JWT-based)
- Register/Login for both roles (vendor & supplier)
- Role-based access
- Store tokens in localStorage on frontend

### 🧑‍🏭 Supplier Panel:
- Dashboard to:
  - Add/Edit/Delete products (name, image, price, stock)
  - View orders placed by vendors
  - Update delivery status for each order

### 🧑‍🍳 Vendor Panel:
- Dashboard to:
  - Browse products by category
  - Filter by price/ratings/supplier
  - Add to cart
  - Place order
  - Track order delivery status
  - Rate suppliers after order delivery

### 📦 Backend (Node.js + Express + MongoDB)
- Models:
  - User (name, email, password, role)
  - Product (name, imageURL, price, stock, supplierId)
  - Order (vendorId, items[], status, total, date, delivery status)
- Routes:
  - /auth
  - /products
  - /orders
- Middleware for token validation and role access

### 💻 Frontend (React + Tailwind)
- Pages:
  - Login/Register (Vendor/Supplier)
  - VendorDashboard.jsx
  - SupplierDashboard.jsx
  - ProductList.jsx
  - AddProduct.jsx
  - OrderHistory.jsx
- Use React Router DOM for routing
- Axios for API calls
- TailwindCSS for responsive UI

---

🌐 Hosting:
- Frontend on Netlify
- Backend on Render
- Use environment variables for secure keys (Mongo URI, JWT secret)

---

📌 EXTRA TOUCH:
- Add a "Recommended Items" section (basic AI logic or rule-based)
- Optional Chatbot using OpenAI API (vendor can ask: “What should I order today?”)
- Show notifications on order status updates

---

📦 DELIVERABLES:
- Fully working frontend + backend in one project
- React code under `/client`, Express backend under `/server`
- README file with instructions to run locally
- Test users for both roles

---

🔥 GOAL:
Generate a complete project folder structure with working code for all endpoints, pages, auth flow, and order flow. No placeholders. It should work from login → place order → supplier updates → order tracked.

This is for a real hackathon submission. The app must be clean, responsive, and functional.
